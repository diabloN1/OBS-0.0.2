// Generated by Xata Codegen 0.30.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Products",
    columns: [
      { name: "product", type: "string" },
      { name: "price", type: "float" },
      { name: "img", type: "file[]", "file[]": { defaultPublicAccess: true } },
      { name: "categorie", type: "string" },
      { name: "discount", type: "float" },
      { name: "description", type: "string" },
    ],
  },
  {
    name: "Categories",
    columns: [
      { name: "name", type: "string" },
      { name: "niche", type: "text" },
    ],
  },
  {
    name: "Demande_S",
    columns: [
      { name: "name", type: "string", defaultValue: "" },
      { name: "serviceType", type: "string" },
      { name: "subject", type: "string" },
      { name: "num", type: "string" },
      { name: "Description", type: "string" },
      { name: "email", type: "string" },
    ],
  },
  {
    name: "Demande_P",
    columns: [
      { name: "nameP", type: "string" },
      { name: "idP", type: "string" },
      { name: "fullName", type: "string" },
      { name: "num", type: "string" },
      { name: "mail", type: "string" },
    ],
  },
  {
    name: "Contact",
    columns: [
      { name: "fullName", type: "string" },
      { name: "num", type: "string" },
      { name: "email", type: "email" },
      { name: "message", type: "string" },
    ],
  },
  {
    name: "Reviews",
    columns: [
      { name: "user", type: "string" },
      { name: "img", type: "string" },
      { name: "comment", type: "string" },
      { name: "product", type: "string" },
      { name: "rate", type: "int", notNull: true, defaultValue: "5" },
    ],
  },
  { name: "Niches", columns: [{ name: "name", type: "text" }] },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Products = InferredTypes["Products"];
export type ProductsRecord = Products & XataRecord;

export type Categories = InferredTypes["Categories"];
export type CategoriesRecord = Categories & XataRecord;

export type DemandeS = InferredTypes["Demande_S"];
export type DemandeSRecord = DemandeS & XataRecord;

export type DemandeP = InferredTypes["Demande_P"];
export type DemandePRecord = DemandeP & XataRecord;

export type Contact = InferredTypes["Contact"];
export type ContactRecord = Contact & XataRecord;

export type Reviews = InferredTypes["Reviews"];
export type ReviewsRecord = Reviews & XataRecord;

export type Niches = InferredTypes["Niches"];
export type NichesRecord = Niches & XataRecord;

export type DatabaseSchema = {
  Products: ProductsRecord;
  Categories: CategoriesRecord;
  Demande_S: DemandeSRecord;
  Demande_P: DemandePRecord;
  Contact: ContactRecord;
  Reviews: ReviewsRecord;
  Niches: NichesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Amine-Yc-s-workspace-dkaoiq.eu-central-1.xata.sh/db/OBS",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};

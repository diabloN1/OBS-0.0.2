// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "tag",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "gallery" },
    ],
  },
  {
    name: "Products",
    columns: [
      { name: "product", type: "string" },
      { name: "description", type: "string" },
      { name: "price", type: "float" },
      { name: "img", type: "file[]", "file[]": { defaultPublicAccess: true } },
      { name: "categorie", type: "string" },
      { name: "discount", type: "float" },
    ],
  },
  { name: "Categories", columns: [{ name: "name", type: "string" }] },
  {
    name: "Demande_S",
    columns: [
      { name: "name", type: "string", defaultValue: "" },
      { name: "serviceType", type: "string" },
      { name: "subject", type: "string" },
      { name: "email", type: "email" },
      { name: "num", type: "string" },
      { name: "Description", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Tag = InferredTypes["tag"];
export type TagRecord = Tag & XataRecord;

export type Products = InferredTypes["Products"];
export type ProductsRecord = Products & XataRecord;

export type Categories = InferredTypes["Categories"];
export type CategoriesRecord = Categories & XataRecord;

export type DemandeS = InferredTypes["Demande_S"];
export type DemandeSRecord = DemandeS & XataRecord;

export type DatabaseSchema = {
  tag: TagRecord;
  Products: ProductsRecord;
  Categories: CategoriesRecord;
  Demande_S: DemandeSRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Amine-Yc-s-workspace-dkaoiq.eu-central-1.xata.sh/db/OBS",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
